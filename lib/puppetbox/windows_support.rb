# Collection of nasty hacks to get puppet to play nicely on windows
module PuppetBox
  module WindowsSupport
    WINDOWS_CODEDIR                 = 'C:/ProgramData/PuppetLabs/code/environments/production'
    ENVIRONMENT_CONF                = "environment.conf"
    ENVIRONMENT_CONF_WINDOWS        = "#{ENVIRONMENT_CONF}.windows"
    ENVIRONMENT_CONF_ORIG_PATH      = ".onceover/etc/puppetlabs/code/environments/production/#{ENVIRONMENT_CONF}"
    ENVIRONMENT_CONF_WINDOWS_TMP    = ".onceover/etc/puppetlabs/code/environments/production/#{ENVIRONMENT_CONF_WINDOWS}"
    ENVIRONMENT_CONF_WINDOWS_SOURCE = "#{WINDOWS_CODEDIR}/#{ENVIRONMENT_CONF_WINDOWS}"
    ENVIRONMENT_CONF_WINDOWS_TARGET = "#{WINDOWS_CODEDIR}/#{ENVIRONMENT_CONF}"

    # convert a linux path to windows - we can't use Path.join because we are
    # dealing with remote computers
    def self.path_to_windows(path)
      path.gsub(/\//, '\\')
    end

    # We need to take a copy of the production environment directory from the
    # shared folder and tweak it to fix environment.conf
    # In puppet-non-windows, `:` is the modulepath delimiter, but on puppet
    # windows, it is of course `;` since `:` is the drive letter seperator.
    # This means that we can't use the same environment.conf on windows as we
    # do on linux.  Also calling out to a script to get catalog-version seems to
    # fail.  Our fix for this is to create our own windows version of
    # environment.conf and upload it to the VM under test, replacing the one that
    # ships with the control repo.
    def self.provision_builtin(codedir)
      "xcopy #{path_to_windows(codedir)} #{path_to_windows(WINDOWS_CODEDIR)} /y /e /s /q" \
      " ; Copy-Item -Path #{path_to_windows(ENVIRONMENT_CONF_WINDOWS_SOURCE)} -Destination #{path_to_windows(ENVIRONMENT_CONF_WINDOWS_TARGET)} -Force"
    end

    # Copy environment.conf and:
    # 1. eliminate the `config_version` line
    # 2. replace `:` with `;` in the modulepath
    # 3. Add a warning header
    def self.fix_environment_conf
      contents = File.open(ENVIRONMENT_CONF_ORIG_PATH, "r").each_line.reject { |line|
        line =~ /config_version/
      }.map { |line|
        (line =~ /modulepath/) ? line.gsub(/:/, ';') : line
      }
      contents.unshift("# Warning - this file was generated by puppetbox for windows compatibility")
      File.write(ENVIRONMENT_CONF_WINDOWS_TMP, contents.join("\n"))
    end

  end
end
